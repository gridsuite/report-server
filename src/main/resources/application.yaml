server:
  port: 5028
  forward-headers-strategy: framework

spring:
  datasource:
    url: ${dbUrl}
    username: ${login}
    password: ${password}

  jpa:
    database: POSTGRESQL
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
    properties:
      hibernate:
        order_inserts: true
        order_updates: true
        format_sql: true
        # Used when action: create is uncommented
        hbm2ddl:
          delimiter: ;
        jdbc:
          batch_size: 100
      # Uncomment action to automatically generate the database sql schema file
      javax:
        persistence:
          schema-generation:
            scripts:
              #action: create
              create-target: src/main/resources/report.sql
              create-source: metadata

# this structure is shared among all microservices, if you change it, change it everywhere
# customQuery allows a microservice to set query parameters specific to itself
# if customQuery is empty, set queryBegin to "?", otherwise set it to "&"
# this allow the user to add additional query elements common to all microservices
# and using the appropriate leading character depending on whether the microsevice
# uses custom query parameters
queryBegin: '&'
customQuery: ?reWriteBatchedInserts=true
dbName: report
dbApi: jdbc
